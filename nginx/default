server {
    listen 8082;
    server_name owncloud.samair.me;

    location / {
        proxy_pass http://pi5.local:9293;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
server {
    listen 8083;
    server_name ai.samair.me;

    location / {
        proxy_pass http://pi5.local:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
     location /_stcore/stream {
                proxy_pass http://pi5.local:5000/_stcore/stream;
                proxy_http_version 1.1;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $host;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_read_timeout 86400;
        }
}
server {
        listen 8081 default_server;
        listen [::]:8081 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        #root /var/www/html;
        root /home/sameer/app;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri /index.html;
        }

        location /fm {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                client_max_body_size 100M;
                try_files $uri/index.html /index.html;
                auth_basic "Restricted Content";
                auth_basic_user_file /etc/nginx/.htpasswd;
        }
        location /assets {
                # Path to your static files
                alias /home/sameer/app/assets/;
        }
        location /static/ {
                # Path to your static files
                alias /home/sameer/app/static/;
        }

        location /api {
#               limit_req zone=one;

                include proxy_params;
                proxy_pass http://127.0.0.1:5000/;
        }
        location /apif/ {
#               limit_req zone=one;
                client_max_body_size 100M;
                include proxy_params;
                proxy_pass http://127.0.0.1:3000/;
        }
        location /internal/ {
                include proxy_params;
                proxy_pass http://127.0.0.1:6363/;
        }
        location /n8n/ {
                include proxy_params;
                proxy_pass http://127.0.0.1:5678/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;

                # Important for n8n webhooks and editor
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Port $server_port;
        }
        # Handle static assets
        location /n8n/assets/ {
                proxy_pass http://localhost:5678/assets/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Specific WebSocket location (may be needed)
        location /n8n/rest/push {
                proxy_pass http://localhost:5678/rest/push;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
}
 # Blog location block
    location /blog {
        alias /home/sameer/app/blog;
        index index.html index.htm;

        # Handle clean URLs for blog
        try_files $uri $uri/ $uri.html =404;

        # Cache static assets for blog
        location ~* ^/blog/.*\.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    location /ai/ {

       proxy_pass http://pi5.local:11434/;
       proxy_connect_timeout 240s;
       proxy_send_timeout 240s;
       proxy_read_timeout 240s;
       send_timeout 240s;

    }
location /qdrant {
            # Forward to your upstream
            proxy_pass http://pi5.local:6333/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 605;
            proxy_send_timeout 605;
            proxy_read_timeout 605;
            send_timeout 605;
            proxy_buffering on;
            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
            proxy_cache off;


            # Ensure gzip decompression for sub_filter
            gunzip on;

            # Force upstream to send gzip or deflate (and not Brotli)
            # This overrides the client's Accept-Encoding
            proxy_set_header Accept-Encoding "";
            # proxy_set_header Accept-Encoding "gzip, deflate";

            # sub_filter: equivalent to Apache's Substitute directives
            # By default, sub_filter only applies to 'text/html' unless configured otherwise.
            # So we enable it for text/css, application/javascript, etc.:

            # If you need to control large responses or multi-line issues, there's no direct
            # sub_filter_max_line_length in NGINX. It processes in chunks. Usually "off" for
            # sub_filter_once is enough for multiple matches.

            # Optionally re-compress the modified response for the client
            # (Already set at http {} level above with 'gzip on;')
        }
}
